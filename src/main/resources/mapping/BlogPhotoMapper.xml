<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunwenlong.dao.BlogPhotoMapper" >
  <resultMap id="BaseResultMap" type="com.yunwenlong.model.BlogPhoto" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="uptime" property="uptime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yunwenlong.model.BlogPhoto" extends="BaseResultMap" >
    <result column="introduce" property="introduce" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, pic, views, addtime, uptime
  </sql>
  <sql id="Blob_Column_List" >
    introduce
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_photo
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from blog_photo
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yunwenlong.model.BlogPhoto" >
    insert into blog_photo (id, user_id, pic, 
      views, addtime, uptime, 
      introduce)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{views,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, #{uptime,jdbcType=TIMESTAMP}, 
      #{introduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yunwenlong.model.BlogPhoto" >
    insert into blog_photo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="views != null" >
        views,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="uptime != null" >
        uptime,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        #{views,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptime != null" >
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunwenlong.model.BlogPhoto" >
    update blog_photo
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptime != null" >
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunwenlong.model.BlogPhoto" >
    update blog_photo
    set user_id = #{userId,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      uptime = #{uptime,jdbcType=TIMESTAMP},
      introduce = #{introduce,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunwenlong.model.BlogPhoto" >
    update blog_photo
    set user_id = #{userId,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      uptime = #{uptime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>